---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  namespace: media

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system

  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.40.3.8555-fef15d30c@sha256:82353ee29f0ba3e782aad43bb2be7c1e04b071b9fc83d6c551ef853793f48ab4

    env:
      TZ: ${TZ}

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${SVC_PLEX_ADDR}"
        ports:
          http:
            port: 32400

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "vip2.${SECRET_EXTERNAL_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host "plex.${SECRET_EXTERNAL_DOMAIN2}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 109, 10000]

    volumeClaimTemplates:
      - name: config-v1
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 120Gi
        storageClass: longhorn

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${NAS}
        path: /volume1/video
        mountPath: /media
      audiobooks:
        enabled: true
        type: nfs
        server: ${NAS}
        path: /volume1/Library/Audiobooks/Library
        mountPath: /audiobooks
      transcode:
        enabled: true
        type: emptyDir

    nodeSelector:
      node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"

    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 10000Mi
# test
